name: Build Packages

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches: [ master ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-packages:
    name: Build DEB and RPM packages
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Get version
        id: version
        run: |
          if [[ $GITHUB_REF == refs/tags/v* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          else
            VERSION=$(git describe --tags --always --dirty 2>/dev/null || echo "0.0.0-dev")
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Building version: $VERSION"

      - name: Build binary
        run: |
          CGO_ENABLED=1 GOOS=linux GOARCH=amd64 go build -v \
            -ldflags "-X main.Version=${{ steps.version.outputs.version }} -s -w" \
            -o namedot \
            ./cmd/namedot

      - name: Install nFPM
        run: |
          echo 'deb [trusted=yes] https://repo.goreleaser.com/apt/ /' | sudo tee /etc/apt/sources.list.d/goreleaser.list
          sudo apt-get update
          sudo apt-get install -y nfpm

      - name: Build DEB package
        env:
          VERSION: ${{ steps.version.outputs.version }}
        run: |
          nfpm pkg --packager deb --config packaging/nfpm.yaml --target .

      - name: Build RPM package
        env:
          VERSION: ${{ steps.version.outputs.version }}
        run: |
          nfpm pkg --packager rpm --config packaging/nfpm.yaml --target .

      - name: List packages
        run: |
          ls -lh *.deb *.rpm || true

      - name: Upload DEB artifact
        uses: actions/upload-artifact@v4
        with:
          name: namedot-deb-${{ steps.version.outputs.version }}
          path: '*.deb'
          retention-days: 30

      - name: Upload RPM artifact
        uses: actions/upload-artifact@v4
        with:
          name: namedot-rpm-${{ steps.version.outputs.version }}
          path: '*.rpm'
          retention-days: 30

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            *.deb
            *.rpm
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
